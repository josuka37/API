// <auto-generated />
using System;
using API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace API.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20210909215452_v03")]
    partial class v03
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("API.Domínio.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("ConcentracaoMg")
                        .HasColumnType("double precision");

                    b.Property<bool>("HumanoOuPet")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("NomeComercial")
                        .HasColumnType("text");

                    b.Property<string>("PrincipioAtivo")
                        .HasColumnType("text");

                    b.Property<int?>("ReceitaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Restrito")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("API.Domínio.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Cpf")
                        .HasColumnType("integer");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<bool>("Médico")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("API.Domínio.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NomeMédico")
                        .HasColumnType("text");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("API.User", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("text");

                    b.HasKey("CPF");

                    b.ToTable("users");
                });

            modelBuilder.Entity("API.Domínio.Medicamento", b =>
                {
                    b.HasOne("API.Domínio.Receita", null)
                        .WithMany("ListaMedicamento")
                        .HasForeignKey("ReceitaId");
                });

            modelBuilder.Entity("API.Domínio.Receita", b =>
                {
                    b.HasOne("API.Domínio.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("API.Domínio.Receita", b =>
                {
                    b.Navigation("ListaMedicamento");
                });
#pragma warning restore 612, 618
        }
    }
}
